{
  "basePath": "",
  "paths": {
    "/extraction/keyword/jobs": {"post": {
      "summary": "Create a keyword extraction job",
      "security": [{"oauth2schema": ["global"]}],
      "produces": ["application/json;charset=UTF-8"],
      "description": "Create a keyword extraction job with settings. For optional settings defaults will be used",
      "operationId": "createJob",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/Job"},
          "description": "Job"
        },
        "201": {
          "schema": {"$ref": "#/definitions/Job"},
          "description": "Created"
        },
        "400": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Invalid job settings"
        }
      },
      "parameters": [{
        "schema": {"$ref": "#/definitions/JobSettings"},
        "in": "body",
        "name": "jobSettings",
        "description": "jobSettings",
        "required": true
      }],
      "tags": ["KeywordExtraction"],
      "consumes": ["application/json;charset=UTF-8"]
    }},
    "/extraction/keyword/jobs/{jobid}/result": {"get": {
      "summary": "Get the extraction results",
      "security": [{"oauth2schema": ["global"]}],
      "produces": ["application/json;charset=UTF-8"],
      "description": "Get the keywords that are extracted from the text. The keyword extraction response contains a list of keywords for each text. For each keyword the weight is given with other text statistics.",
      "operationId": "getResult",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/KeywordExtractionResponse"},
          "description": "Result successfully created and returned"
        },
        "400": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Result could not be created."
        },
        "404": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Invalid job id. No response body is supplied"
        }
      },
      "parameters": [{
        "in": "path",
        "name": "jobid",
        "description": "jobid",
        "type": "string",
        "required": true
      }],
      "tags": ["KeywordExtraction"],
      "consumes": ["application/json"]
    }},
    "/extraction/keyword/jobs/{jobid}": {
      "get": {
        "summary": "Job definition and state",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Get the keyword extraction job definition and current state. Please note that you can differentiate based on http response status.",
        "operationId": "getJob",
        "responses": {
          "200": {
            "schema": {"$ref": "#/definitions/Job"},
            "description": "Job"
          },
          "404": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Job not found"
          }
        },
        "parameters": [{
          "in": "path",
          "name": "jobid",
          "description": "jobid",
          "type": "string",
          "required": true
        }],
        "tags": ["KeywordExtraction"],
        "consumes": ["application/json"]
      },
      "delete": {
        "summary": "Delete a job manually",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Delete the job and all related files.",
        "operationId": "deleteJob",
        "responses": {
          "200": {
            "schema": {"$ref": "#/definitions/Job"},
            "description": "Job deleted"
          },
          "400": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Job failed to delete"
          },
          "404": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Job was already deleted or unknown job id"
          }
        },
        "parameters": [{
          "in": "path",
          "name": "jobid",
          "description": "jobid",
          "type": "string",
          "required": true
        }],
        "tags": ["KeywordExtraction"],
        "consumes": ["application/json"]
      },
      "put": {
        "summary": "Submit keyword extraction job for processing",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Start keyword extraction. The extraction is done on the previously texts. The settings supplied with the job in the request body are used for the keyword extraction. You can only submit the job after a new Job is created with status INPUTS_UPLOADED or resubmit an existing Job with status ERROR. In all cases the job Id in the path must match the jobId in the request.",
        "operationId": "submitJob",
        "responses": {
          "200": {
            "schema": {"$ref": "#/definitions/Job"},
            "description": "Splitting started. The job will be returned in the body."
          },
          "400": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Splitting request could not be processed"
          },
          "404": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Invalid job id. No response body is supplied"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "jobid",
            "description": "jobid",
            "type": "string",
            "required": true
          },
          {
            "schema": {"$ref": "#/definitions/JobSettings"},
            "in": "body",
            "name": "settings",
            "description": "settings",
            "required": true
          }
        ],
        "tags": ["KeywordExtraction"],
        "consumes": ["application/json"]
      }
    },
    "/extraction/keyword/jobs/{jobid}/streams/text": {"post": {
      "summary": "Upload text",
      "security": [{"oauth2schema": ["global"]}],
      "produces": ["application/json;charset=UTF-8"],
      "description": "Upload text for keyword extraction. Keyword extraction will start after submitting the job.",
      "operationId": "addInputText",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/Job"},
          "description": "Upload text for extraction. The job will be returned in the body."
        },
        "400": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Text could not be stored/processed"
        },
        "404": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Invalid job id."
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "jobid",
          "description": "jobid",
          "type": "string",
          "required": true
        },
        {
          "schema": {"$ref": "#/definitions/TextInput"},
          "in": "body",
          "name": "textInput",
          "description": "textInput",
          "required": true
        }
      ],
      "tags": ["KeywordExtraction"],
      "consumes": ["application/json;charset=UTF-8"]
    }}
  },
  "host": "localhost:18751",
  "schemes": ["http"],
  "securityDefinitions": {"oauth2schema": {
    "tokenUrl": "https://gw-dev.api.cloud.sphereon.com/token",
    "scopes": {"global": "accessEverything"},
    "type": "oauth2",
    "flow": "application"
  }},
  "definitions": {
    "KeywordExtractionResponse": {
      "description": "Keyword extraction response for a job",
      "type": "object",
      "properties": {
        "jobId": {"type": "string"},
        "keywordList": {
          "description": "The keywords that are extracted for each input",
          "readOnly": true,
          "type": "array",
          "items": {"$ref": "#/definitions/Keyword"}
        },
        "keywords": {
          "description": "The keywords that are extracted for each input",
          "readOnly": true,
          "additionalProperties": {
            "type": "array",
            "items": {"$ref": "#/definitions/Keyword"}
          },
          "type": "object"
        },
        "job": {
          "description": "The extraction job",
          "readOnly": true,
          "$ref": "#/definitions/Job"
        },
        "errors": {
          "description": "The errors that occurred",
          "readOnly": true,
          "type": "array",
          "items": {"type": "string"}
        }
      }
    },
    "JobSettings": {
      "description": "Job settings",
      "type": "object",
      "required": [
        "engine",
        "maxKeywords"
      ],
      "properties": {
        "tfidfScheme": {
          "description": "The algorithm how the keywords are extracted.",
          "type": "string",
          "enum": [
            "TF_IDF",
            "LOG_NORM_IDF"
          ]
        },
        "engine": {
          "description": "The engine defines the quality that will be used to process the job",
          "type": "string",
          "enum": ["BASIC"]
        },
        "normalization": {
          "description": "The type of normalization used on the result.",
          "type": "string",
          "enum": [
            "NONE",
            "COSINE"
          ]
        },
        "minWeight": {
          "format": "double",
          "description": "The minimal weight a keyword should have.",
          "type": "number"
        },
        "maxKeywords": {
          "format": "int32",
          "description": "The maximum number of keyword that will be extracted from the text.",
          "type": "integer"
        }
      }
    },
    "Keyword": {
      "description": "Extraction keyword",
      "type": "object",
      "properties": {
        "inverseDocumentFrequency": {
          "format": "float",
          "description": "The inverse document frequency of the keyword",
          "type": "number"
        },
        "termCount": {
          "format": "int32",
          "description": "The number occurrences of the keyword in the document",
          "type": "integer"
        },
        "termFrequency": {
          "format": "float",
          "description": "The frequency of the keyword in the document",
          "type": "number"
        },
        "weight": {
          "format": "float",
          "description": "The weight of the keyword",
          "type": "number"
        },
        "keyword": {
          "description": "The keyword",
          "type": "string"
        },
        "normalizedWeight": {
          "format": "float",
          "description": "The normalized weight of the keyword",
          "type": "number"
        }
      }
    },
    "Error": {
      "description": "An error",
      "type": "object",
      "required": [
        "code",
        "level",
        "message"
      ],
      "properties": {
        "code": {"type": "string"},
        "level": {
          "type": "string",
          "enum": [
            "INFO",
            "WARNING",
            "FATAL"
          ]
        },
        "cause": {"$ref": "#/definitions/Error"},
        "message": {"type": "string"}
      }
    },
    "Job": {
      "description": "Extraction Job",
      "type": "object",
      "required": [
        "jobSettings",
        "state"
      ],
      "properties": {
        "completionTime": {
          "format": "date-time",
          "description": "The completion date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "jobId": {"type": "string"},
        "creationTime": {
          "format": "date-time",
          "description": "The creation date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "inputs": {
          "description": "The input files",
          "type": "array",
          "items": {"$ref": "#/definitions/InputEntry"}
        },
        "jobSettings": {"$ref": "#/definitions/JobSettings"},
        "updateTime": {
          "format": "date-time",
          "description": "The last update date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "The status of the job",
          "readOnly": true,
          "type": "string",
          "enum": [
            "INPUTS_UPLOADED",
            "PROCESSING",
            "DONE",
            "ERROR",
            "DELETED"
          ]
        },
        "queueTime": {
          "format": "date-time",
          "description": "The queue date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "TextInput": {
      "description": "Text input",
      "type": "object",
      "properties": {"text": {
        "description": "The text input for extraction.",
        "type": "string"
      }}
    },
    "ErrorResponse": {
      "description": "The error response",
      "type": "object",
      "properties": {"errors": {
        "type": "array",
        "items": {"$ref": "#/definitions/Error"}
      }}
    },
    "InputEntry": {
      "description": "Input entry",
      "type": "object",
      "properties": {
        "textInput": {
          "description": "The input for a job can be either a text of a stream location.",
          "$ref": "#/definitions/TextInput"
        },
        "id": {
          "description": "The id of the input for a job.",
          "type": "string"
        }
      }
    }
  },
  "swagger": "2.0",
  "info": {
    "license": {
      "name": "Apache License Version 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "contact": {
      "name": "Sphereon DevOps Team",
      "url": "https://sphereon.com",
      "email": "dev@sphereon.com"
    },
    "description": "The Keyword Extraction API allows you to extract keywords from text. Keywords can be extracted from text, file or stream location. With each extracted keyword a weight will be given.\r\n\r\nThe flow is generally as follows:\r\n1. Create an extraction job. If no settings are provided, default settings are used.\r\n2. Upload content for extraction.\r\n3. Start the extraction job.\r\n3. Get the result when the extraction is completed.\r\n\r\nFull API Documentation: https://docs.sphereon.com/api/extraction/keyword/0.0/html\r\nInteractive testing: A web based test console is available in the Sphereon API Store at https://store.sphereon.com",
    "termsOfService": "https://sphereon.com",
    "title": "Keyword Extraction",
    "version": "0.0"
  },
  "tags": [{
    "name": "KeywordExtraction",
    "description": "Keyword extraction related API's"
  }]
}